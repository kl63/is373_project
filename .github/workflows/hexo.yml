name: Test and Deploy Hexo Site

on:
  push:
    branches:
      - master  # Trigger on push to the master branch
  pull_request:
    branches:
      - master  # Trigger on pull request to the master branch

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '21'  # Use Node.js version 21
      HEXO_PORT: 4000
      PLAYWRIGHT_REPO: 'https://github.com/sebastianlop23/is375_plr.git'  # Your Playwright test repository
      PLAYWRIGHT_CONFIG: './playwright.config.js'  # Path to your Playwright config file

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Hexo and install dependencies
        run: |
          npm install -g hexo-cli
          npm install
          npx playwright install-deps  # Install dependencies required by Playwright
          npx playwright install  # Install Playwright browsers

      - name: Generate site
        run: |
          hexo clean
          hexo generate

      - name: Start Hexo server persistently
        run: |
          nohup hexo server -p $HEXO_PORT > hexo_server.log 2>&1 &
          sleep 5  # Give the server some time to start

      - name: Check if Hexo server is running
        run: |
          for i in {1..10}; do
            curl -I http://localhost:$HEXO_PORT/ && break
            echo "Waiting for Hexo server to be ready..."
            sleep 3
          done
        shell: bash

      - name: Clone Playwright repository, install dependencies, and run tests
        run: |
          git clone $PLAYWRIGHT_REPO
          cd is375_plr  # Change directory to your cloned repository
          npm install
          npx playwright install  # Ensure Playwright browsers are installed
          npx playwright test --config=$PLAYWRIGHT_CONFIG  # Run Playwright tests

      - name: Display Hexo server log (for debugging)
        if: failure()  # Show logs only if the test fails
        run: cat hexo_server.log

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure deployment only happens if the tests pass
    if: github.event_name == 'push'

    steps:
      - name: Checkout Hexo repository
        uses: actions/checkout@v3

      - name: Set up Hexo and install dependencies
        run: |
          npm install -g hexo-cli
          npm install

      - name: Generate Hexo site
        run: |
          hexo clean
          hexo generate

      - name: Add .nojekyll file
        run: touch ./public/.nojekyll  # Ensure this file exists in the public directory

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public  # Ensure this matches your build output directory
